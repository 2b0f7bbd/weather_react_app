{"version":3,"sources":["compontents/List/List.module.css","compontents/Card/Card.module.css","img sync /^/.//.*/.svg$","img/clear-day.svg","img/clear-night.svg","img/cloudy.svg","img/fog.svg","img/partly-cloudy-day.svg","img/rain.svg","img/sleet.svg","img/snow.svg","img/wind.svg","compontents/List/List.js","compontents/Card/Card.js","containers/App.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","List","props","daylyData","weatherInfo","daily","data","options","month","day","weekday","item","index","key","toString","className","classes","weatherContainer","dates","Date","time","toLocaleDateString","src","require","icon","alt","Math","trunc","currently","temperature","apparentTemperature","temperatureMax","temperatureMin","summary","Card","useState","setWeatherInfo","useEffect","proxy","myHeaders","Headers","append","localStorage","getItem","lat","long","query","Number","fetch","headers","then","json","catch","error","console","log","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setItem","loading","App","ReactDOM","render","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,iBAAmB,+BAA+B,QAAU,wB,gBCA9ED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,0ECDtD,IAAIC,EAAM,CACT,kBAAmB,GACnB,oBAAqB,GACrB,eAAgB,GAChB,YAAa,GACb,0BAA2B,GAC3B,aAAc,GACd,cAAe,GACf,aAAc,GACd,aAAc,IAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,I,gBC9BpBL,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,yHC+C5Bc,MA5Cf,SAAcC,GACZ,IAAMC,EAAYD,EAAME,YAAYC,MAAMC,KACxCC,EAAU,CACRC,MAAO,QACPC,IAAK,UACLC,QAAS,SAGb,GAAIP,EACF,OAAOA,EAAUf,KAAI,SAACuB,EAAMC,GAC1B,OACE,yBAAKC,IAAKD,EAAME,WAAYC,UAAWC,IAAQC,kBAC7C,wBAAIF,UAAWC,IAAQE,OACV,IAAVN,EAAc,UAAY,KAC1B,IAAIO,KAAiB,IAAZR,EAAKS,MAAaC,mBAAmB,QAASd,IAE1D,yBACEe,IAAKC,MAAQ,YAAaZ,EAAKa,KAAnB,SACZC,IAAKd,EAAKa,OAEZ,6BACa,IAAVZ,EACC,6BACE,8BACGc,KAAKC,MAAMzB,EAAME,YAAYwB,UAAUC,cAF5C,gBAIgB,IACd,8BACGH,KAAKC,MAAMzB,EAAME,YAAYwB,UAAUE,uBAG1C,MAEN,sCACQ,8BAAOJ,KAAKC,MAAMhB,EAAKoB,iBAD/B,SAC6D,IAC3D,8BAAOL,KAAKC,MAAMhB,EAAKqB,kBAEzB,yBAAKjB,UAAWC,IAAQiB,SAAUtB,EAAKsB,c,gBCoBlCC,MAxDf,WAAiB,IAAD,EACwBC,mBAAS,IADjC,mBACP/B,EADO,KACMgC,EADN,KA6Cd,OA1CAC,qBAAU,WACR,IAAMxB,EAAM,mCACVyB,EAAQ,uCACRC,EAAY,IAAIC,QAOlB,GANAD,EAAUE,OACR,mBACA,iBACA,kCAGEC,aAAaC,QAAQ,QAAUD,aAAaC,QAAQ,QAAS,CAC/D,IAAMC,EAAMF,aAAaC,QAAQ,OAC/BE,EAAOH,aAAaC,QAAQ,QAC5BG,EAAK,UAAMR,EAAN,4CAA+CzB,EAA/C,YAAsDkC,OACzDH,GADG,YAEAG,OAAOF,GAFP,eAIPG,MAAMF,EAAO,CAAEG,QAASV,IACrBW,MAAK,SAAA5C,GAAI,OAAIA,EAAK6C,UAClBD,MAAK,SAAA5C,GAAI,OAAI8B,EAAe9B,MAC5B8C,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAG3BX,aAAaC,QAAQ,QAAWD,aAAaC,QAAQ,SACxDa,UAAUC,YAAYC,oBAAmB,SAAAC,GACvC,IAAMf,EAAMe,EAASC,OAAOC,SAC1BhB,EAAOc,EAASC,OAAOE,UACvBhB,EAAK,UAAMR,EAAN,4CAA+CzB,EAA/C,YAAsDkC,OACzDH,GADG,YAEAG,OAAOF,GAFP,eAIPH,aAAaqB,QAAQ,MAAOnB,GAC5BF,aAAaqB,QAAQ,OAAQlB,GAE7BG,MAAMF,EAAO,CAAEG,QAASV,IACrBW,MAAK,SAAA5C,GAAI,OAAIA,EAAK6C,UAClBD,MAAK,SAAA5C,GAAI,OAAI8B,EAAe9B,MAC5B8C,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,WAGjC,IAECjD,EAEA,yBAAKW,UAAWC,IAAQkB,MACtB,kBAAC,EAAD,CAAM9B,YAAaA,KAIhB,yBAAKW,UAAWC,IAAQgD,SAAxB,e,MC5CIC,MARf,WACE,OACE,yBAAKlD,UAAU,OACb,kBAAC,EAAD,QCFNmD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d3d8a6e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherContainer\":\"List_weatherContainer__2a-Om\",\"summary\":\"List_summary__37JbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__15iKZ\",\"loading\":\"Card_loading__3te7N\"};","var map = {\n\t\"./clear-day.svg\": 13,\n\t\"./clear-night.svg\": 14,\n\t\"./cloudy.svg\": 15,\n\t\"./fog.svg\": 16,\n\t\"./partly-cloudy-day.svg\": 17,\n\t\"./rain.svg\": 18,\n\t\"./sleet.svg\": 19,\n\t\"./snow.svg\": 20,\n\t\"./wind.svg\": 21\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 12;","module.exports = __webpack_public_path__ + \"static/media/clear-day.53f709c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.b87ca8b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.79b3c647.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.788adf71.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.534afba6.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.316ec331.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.f4e14d44.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.35404d3a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.6b4d1006.svg\";","import React from 'react';\nimport classes from './List.module.css';\n\nfunction List(props) {\n  const daylyData = props.weatherInfo.daily.data,\n    options = {\n      month: 'short',\n      day: 'numeric',\n      weekday: 'short'\n    };\n\n  if (daylyData) {\n    return daylyData.map((item, index) => {\n      return (\n        <div key={index.toString()} className={classes.weatherContainer}>\n          <h1 className={classes.dates}>\n            {index === 0 ? 'Today: ' : null}\n            {new Date(item.time * 1000).toLocaleDateString('en-us', options)}\n          </h1>\n          <img\n            src={require(`../../img/${item.icon}.svg`)}\n            alt={item.icon}\n          ></img>\n          <div>\n            {index === 0 ? (\n              <div>\n                <span>\n                  {Math.trunc(props.weatherInfo.currently.temperature)}\n                </span>\n                , feels like:{' '}\n                <span>\n                  {Math.trunc(props.weatherInfo.currently.apparentTemperature)}\n                </span>\n              </div>\n            ) : null}\n          </div>\n          <div>\n            High: <span>{Math.trunc(item.temperatureMax)}</span>, Low:{' '}\n            <span>{Math.trunc(item.temperatureMin)}</span>\n          </div>\n          <div className={classes.summary}>{item.summary}</div>\n        </div>\n      );\n    });\n  }\n}\n\nexport default List;\n","import React, { useState, useEffect } from 'react';\nimport List from '../List/List';\nimport classes from './Card.module.css';\n\nfunction Card() {\n  const [weatherInfo, setWeatherInfo] = useState('');\n\n  useEffect(() => {\n    const key = 'af1000ee120ca1f6469133dccf46491b',\n      proxy = 'https://cors-anywhere.herokuapp.com/',\n      myHeaders = new Headers();\n    myHeaders.append(\n      'X-Requested-With',\n      'XMLHttpRequest',\n      'Access-Control-Allow-Origin: *'\n    );\n\n    if (localStorage.getItem('lat') && localStorage.getItem('long')) {\n      const lat = localStorage.getItem('lat'),\n        long = localStorage.getItem('long'),\n        query = `${proxy}https://api.darksky.net/forecast/${key}/${Number(\n          lat\n        )},${Number(long)}?units=auto`;\n\n      fetch(query, { headers: myHeaders })\n        .then(data => data.json())\n        .then(data => setWeatherInfo(data))\n        .catch(error => console.log(error));\n    }\n\n    if (!localStorage.getItem('lat') && !localStorage.getItem('long')) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const lat = position.coords.latitude,\n          long = position.coords.longitude,\n          query = `${proxy}https://api.darksky.net/forecast/${key}/${Number(\n            lat\n          )},${Number(long)}?units=auto`;\n\n        localStorage.setItem('lat', lat);\n        localStorage.setItem('long', long);\n\n        fetch(query, { headers: myHeaders })\n          .then(data => data.json())\n          .then(data => setWeatherInfo(data))\n          .catch(error => console.log(error));\n      });\n    }\n  }, []);\n\n  if (weatherInfo) {\n    return (\n      <div className={classes.Card}>\n        <List weatherInfo={weatherInfo} />\n      </div>\n    );\n  } else {\n    return <div className={classes.loading}>Loading...</div>;\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from '../compontents/Card/Card';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Card />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}